package com.ifmo.ddj.Exam;

public class Task {
    /*
    Задача «Фитнес»
    //нужно сделать абстрактный класс
    //интерфейсы по желанию


В фитнес клубе есть три типа абонементов:
    Разовый. По разовому абонементу клиенты могут посещать бассейн и тренажерный зал с 8 до 22 часов. //начало и окончание регистрации совпадают
    Дневной. По данному абонементу клиенты могут посещать тренажерный зал и групповые занятия (но не бассейн) с 8 до 16 часов.
    Полный. По данному абонементу клиенты могут посещать тренажерный зал, бассейн и групповые занятия с 8 до 22 часов.

Каждый абонемент хранит дату регистрации (текущая дата) и дату окончания регистрации. //проверка - дата окончания не может быть раньше текущей
Каждый абонемент хранит информацию о владельце. Данные о владельце: имя, фамилия, год рождения. //отдельный класс

Фитнес содержит информацию об абонементах:
    которые зарегистрированы в данный момент в тренажерном зале; //физически пришел приложил абонемент - зашел в бассейн
    абонементах, которые зарегистрированы в бассейне;
    абонементах, которые зарегистрированы на групповых занятиях.

В каждой зоне (бассейн, тренажерный зал, групповые занятия) одновременно может быть зарегистрировано 20 абонементов.

Когда  фитнес клуб закрывается, клиенты покидают его. //удаляются из массива - становятся null

Когда клиент приходит в фитнес клуб, он сообщает желаемую зону и показывает абонемент. // не нужно создвать человека
//принимает на вход(бассейн, абонемент)
Необходимо проверить может ли данный посетитель пройти в желаемую зону и пропустить его,
если возможность существует; если посетитель не может пройти, необходимо сообщить ему причину. //по желанию предложить другие зоны

Посетитель не может пройти, если абонемент просрочен
если он пытается пройти в зону, которая не разрешена по его абонементу,
если в зоне нет свободных мест.
//желательно чтобы ночью тоже не пытался пройти
//******чтобы сразу не смог пойти в 2 зоны и перемещаться по зонам тоже не должен
//т.е. одновременно в 2хзонах зарегистрирован не может быть

//****Реализовать возможность вывода информации о посетителях:
//сначала посетителях тренажерного зала, потом бассейна, потом групповых занятий. // можно сделать статическим методом

//каждый раз когда посещает клуб
Реализовать возможность выводить информацию в консоль каждый раз, когда клиент посещает фитнес клуб.
Информация для вывода: // можно сделать статическим методом

//сортировка, не массив
//выводится только если он прошел
Фамилия
Имя
Зона посещения на данный момент
Дата и время посещения

Методы вывода информации в консоль можно описать в отдельном классе Logger (методы можно сделать static)
//передавать логер в фитнес


//можно все делать относительно текущего времени
     */
}
